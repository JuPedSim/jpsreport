name: jpsreport-macos-catalina

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          brew install boost
          brew install libomp
          cp scripts/setup-deps.sh ../
          cd .. && chmod +x setup-deps.sh && ./setup-deps.sh
          pip3 install numpy && \
              pip3 install pandas && \
              pip3 install dataclasses && \
              pip3 install scipy && \
              pip3 install shapely

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON -DBUILD_UNIT_TEST=ON -DCMAKE_PREFIX_PATH=/Users/runner/work/jpsreport/deps

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE --output-on-failure

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results
          path: |
            ${{github.workspace}}/build/Testing/
            ${{github.workspace}}/tests/systemtest/